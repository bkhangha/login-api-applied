{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\bkhan\\\\Downloads\\\\signin-signup-app-main\\\\client\\\\src\\\\components\\\\memes.UI.js\",\n  _s = $RefreshSig$();\nimport React, { useState, useEffect } from 'react';\nimport { useQuery } from 'react-query';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nfunction Memes() {\n  _s();\n  const [index, setIndex] = useState(0);\n  function getRndInteger(min, max) {\n    return Math.floor(Math.random() * (max - min + 1)) + min;\n  }\n  function reloadImages() {\n    let randomNumber = getRndInteger(0, 100);\n    setIndex(randomNumber);\n  }\n  const style = {\n    display: \"flex\",\n    justifyContent: \"center\",\n    alignItems: \"center\"\n  };\n  useEffect(() => {\n    getMemes();\n  }, []);\n  const getMemes = async () => {\n    const res = await fetch('https://api.imgflip.com/get_memes');\n    return res.json();\n  };\n  const {\n    data,\n    error,\n    isLoading\n  } = useQuery('/memes', getMemes);\n  if (error) return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: \"Request Failed\"\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 33,\n    columnNumber: 20\n  }, this);\n  if (isLoading) return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: \"Loading...\"\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 34,\n    columnNumber: 24\n  }, this);\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [/*#__PURE__*/_jsxDEV(\"p\", {\n      style: style,\n      children: \"Click to reload images\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 38,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"ul\", {\n      style: style,\n      children: /*#__PURE__*/_jsxDEV(\"button\", {\n        onClick: () => reloadImages(),\n        children: \"Reload\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 40,\n        columnNumber: 17\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 39,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"ul\", {\n      children: /*#__PURE__*/_jsxDEV(\"div\", {\n        children: /*#__PURE__*/_jsxDEV(\"img\", {\n          src: data.data.memes[index].url,\n          width: \"300px\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 45,\n          columnNumber: 21\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 43,\n        columnNumber: 17\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 42,\n      columnNumber: 13\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 37,\n    columnNumber: 9\n  }, this);\n}\n_s(Memes, \"OZHMZv7g3GhRq/ovXoQmaUGCnEM=\", false, function () {\n  return [useQuery];\n});\n_c = Memes;\nexport default Memes;\nvar _c;\n$RefreshReg$(_c, \"Memes\");","map":{"version":3,"names":["React","useState","useEffect","useQuery","Memes","index","setIndex","getRndInteger","min","max","Math","floor","random","reloadImages","randomNumber","style","display","justifyContent","alignItems","getMemes","res","fetch","json","data","error","isLoading","memes","url"],"sources":["C:/Users/bkhan/Downloads/signin-signup-app-main/client/src/components/memes.UI.js"],"sourcesContent":["import React, { useState, useEffect } from 'react';\nimport {useQuery} from 'react-query';\n\nfunction Memes() {\n    const [index, setIndex] = useState(0);\n\n    function getRndInteger(min, max) {\n        return Math.floor(Math.random() * (max - min + 1) ) + min;\n    }\n\n    function reloadImages(){\n        let randomNumber = getRndInteger(0, 100);\n        setIndex(randomNumber);\n    }\n\n    const style = {\n        display: \"flex\",\n        justifyContent: \"center\",\n        alignItems: \"center\"\n    };\n\n    useEffect(() => {\n        getMemes();\n    }, []);\n\n    const getMemes = async () => {\n\t\tconst res = await fetch('https://api.imgflip.com/get_memes');\n\t\treturn res.json();\n\t};\n\t\n\tconst {data, error, isLoading} = useQuery('/memes', getMemes);\n\n\tif (error) return <div>Request Failed</div>;\n\tif (isLoading) return <div>Loading...</div>;\n\t\n\treturn (\n        <div>\n            <p style={style}>Click to reload images</p>\n            <ul style={style}>\n                <button onClick={() => reloadImages()}>Reload</button>\n            </ul>\n            <ul>\n                <div>\n                {\n                    <img src={data.data.memes[index].url} width=\"300px\"></img>\n                }\n                </div>\n            </ul>\n        </div>\n\t);\n}\n\nexport default Memes;"],"mappings":";;AAAA,OAAOA,KAAK,IAAIC,QAAQ,EAAEC,SAAS,QAAQ,OAAO;AAClD,SAAQC,QAAQ,QAAO,aAAa;AAAC;AAErC,SAASC,KAAK,GAAG;EAAA;EACb,MAAM,CAACC,KAAK,EAAEC,QAAQ,CAAC,GAAGL,QAAQ,CAAC,CAAC,CAAC;EAErC,SAASM,aAAa,CAACC,GAAG,EAAEC,GAAG,EAAE;IAC7B,OAAOC,IAAI,CAACC,KAAK,CAACD,IAAI,CAACE,MAAM,EAAE,IAAIH,GAAG,GAAGD,GAAG,GAAG,CAAC,CAAC,CAAE,GAAGA,GAAG;EAC7D;EAEA,SAASK,YAAY,GAAE;IACnB,IAAIC,YAAY,GAAGP,aAAa,CAAC,CAAC,EAAE,GAAG,CAAC;IACxCD,QAAQ,CAACQ,YAAY,CAAC;EAC1B;EAEA,MAAMC,KAAK,GAAG;IACVC,OAAO,EAAE,MAAM;IACfC,cAAc,EAAE,QAAQ;IACxBC,UAAU,EAAE;EAChB,CAAC;EAEDhB,SAAS,CAAC,MAAM;IACZiB,QAAQ,EAAE;EACd,CAAC,EAAE,EAAE,CAAC;EAEN,MAAMA,QAAQ,GAAG,YAAY;IAC/B,MAAMC,GAAG,GAAG,MAAMC,KAAK,CAAC,mCAAmC,CAAC;IAC5D,OAAOD,GAAG,CAACE,IAAI,EAAE;EAClB,CAAC;EAED,MAAM;IAACC,IAAI;IAAEC,KAAK;IAAEC;EAAS,CAAC,GAAGtB,QAAQ,CAAC,QAAQ,EAAEgB,QAAQ,CAAC;EAE7D,IAAIK,KAAK,EAAE,oBAAO;IAAA;EAAA;IAAA;IAAA;IAAA;EAAA,QAAyB;EAC3C,IAAIC,SAAS,EAAE,oBAAO;IAAA;EAAA;IAAA;IAAA;IAAA;EAAA,QAAqB;EAE3C,oBACO;IAAA,wBACI;MAAG,KAAK,EAAEV,KAAM;MAAA;IAAA;MAAA;MAAA;MAAA;IAAA,QAA2B,eAC3C;MAAI,KAAK,EAAEA,KAAM;MAAA,uBACb;QAAQ,OAAO,EAAE,MAAMF,YAAY,EAAG;QAAA;MAAA;QAAA;QAAA;QAAA;MAAA;IAAgB;MAAA;MAAA;MAAA;IAAA,QACrD,eACL;MAAA,uBACI;QAAA,uBAEI;UAAK,GAAG,EAAEU,IAAI,CAACA,IAAI,CAACG,KAAK,CAACrB,KAAK,CAAC,CAACsB,GAAI;UAAC,KAAK,EAAC;QAAO;UAAA;UAAA;UAAA;QAAA;MAAO;QAAA;QAAA;QAAA;MAAA;IAExD;MAAA;MAAA;MAAA;IAAA,QACL;EAAA;IAAA;IAAA;IAAA;EAAA,QACH;AAEd;AAAC,GA/CQvB,KAAK;EAAA,QA2BoBD,QAAQ;AAAA;AAAA,KA3BjCC,KAAK;AAiDd,eAAeA,KAAK;AAAC;AAAA"},"metadata":{},"sourceType":"module"}